{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Modal/Modal.js","services/pixabay-api.js","components/Button/Button.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/App/App.js","index.js"],"names":["SearchBar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Loader","color","height","width","timeout","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","largeImageURL","onClick","src","alt","currentPage","searchQuery","axios","get","then","data","Button","ImageGalleryItem","onData","openModal","map","id","webformatURL","tags","data-large","ImageGallery","children","App","isLoading","showModal","toggleModal","large","dataset","onChangeQuery","fetchImages","pixabayApi","prevState","hits","catch","error","console","log","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","Searchbar","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.153d3afb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SearchBar extends Component {\r\n  state = { query: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              value={this.state.query}\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport LoaderSpin from \"react-loader-spinner\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <LoaderSpin\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL } = this.props;\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\r\n\r\nconst fetchImg = (currentPage, searchQuery) => {\r\n  const apiKey = \"18864505-6c3c7593910f8166537b8d98b\";\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12\r\n        `\r\n    )\r\n    .then(({ data }) => data);\r\n};\r\n\r\nexport default { fetchImg };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onClick} className=\"Button\">\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ onData, openModal }) => {\r\n  return (\r\n    <>\r\n      {onData.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <li className=\"ImageGalleryItem\" key={id}>\r\n          <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            className=\"ImageGalleryItem-image\"\r\n            onClick={openModal}\r\n            data-large={largeImageURL}\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  onData: PropTypes.arrayOf(\r\n    PropTypes.objectOf(\r\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])\r\n    )\r\n  ).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Searchbar from \"../Searchbar\";\r\nimport Loader from \"../Loader\";\r\nimport Modal from \"../Modal\";\r\nimport pixabayApi from \"../../services/pixabay-api\";\r\nimport Button from \"../Button\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport ImageGallery from \"../ImageGallery\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: [],\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    isLoading: false,\r\n    largeImageURL: null,\r\n    showModal: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  openModal = (e) => {\r\n    this.toggleModal();\r\n    const { large } = e.target.dataset;\r\n    this.setState({ largeImageURL: large });\r\n  };\r\n\r\n  onChangeQuery = (query) => {\r\n    this.setState({ searchQuery: query, currentPage: 1, data: [] });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n    this.setState({ isLoading: true });\r\n    pixabayApi\r\n      .fetchImg(currentPage, searchQuery)\r\n      .then((data) => {\r\n        this.setState((prevState) => ({\r\n          data: [...prevState.data, ...data.hits],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .finally(() => {\r\n        this.setState({ isLoading: false });\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { data, isLoading, showModal, largeImageURL } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} />\r\n        )}\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        <ImageGallery>\r\n          <ImageGalleryItem onData={data} openModal={this.openModal} />\r\n        </ImageGallery>\r\n        {isLoading && <Loader />}\r\n        {data.length > 0 && !isLoading && <Button onClick={this.fetchImages} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/styles.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}